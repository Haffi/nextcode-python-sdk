{
    "arguments": [
        {
            "default": "",
            "name": "var_gene_symbol",
            "optional": false,
            "type": "string"
        },
        {
            "default": "",
            "name": "var_chrom",
            "optional": false,
            "type": "string"
        },
        {
            "default": "",
            "name": "var_pos",
            "optional": false,
            "type": "string"
        },
        {
            "default": "",
            "name": "var_reference",
            "optional": false,
            "type": "string"
        },
        {
            "default": "",
            "name": "var_call",
            "optional": false,
            "type": "string"
        },
        {
            "default": "",
            "name": "var_transcript",
            "optional": true,
            "type": "string"
        },
        {
            "default": "",
            "description": null,
            "display_name": "File holding the prepopulated mendel result",
            "name": "prepopulated_result",
            "optional": true,
            "type": "file"
        },
        {
            "format": {
                "empty": "'NONE'",
                "keywords": "%s",
                "values": "%s"
            },
            "name": "index_case",
            "optional": true,
            "quoted": true,
            "single_selection": true,
            "type": "string",
            "values_path": "SubjectReports/All.rep.link"
        },
        {
            "default": "",
            "name": "candidate_gene_report_file",
            "optional": true,
            "type": "file"
        },
        {
            "default": "",
            "display_name": "Gene panel info file",
            "name": "gene_panel_info_file",
            "optional": true,
            "type": "file"
        },
        {
            "default": "false",
            "description": null,
            "display_name": "Show only HGMD refgene transcripts",
            "name": "hgmd_transcripts_only",
            "optional": true,
            "type": "string",
            "values": [
                "true",
                "false"
            ]
        },
        {
            "advanced": true,
            "default": "ref",
            "description": "Path to the reference data directory.",
            "display_name": "Reference path",
            "name": "ref_path",
            "optional": true,
            "type": "string"
        },
        {
            "advanced": true,
            "default": "source/anno/vep_v85",
            "description": "Path to the VEP directory",
            "display_name": "VEP Path",
            "name": "vep_path",
            "optional": true,
            "type": "string"
        },
        {
            "advanced": true,
            "default": "Refgene",
            "description": "Select whether to use Ensembl or Refgene VEP reference data.",
            "display_name": "VEP gene reference",
            "name": "vep_gene_reference",
            "optional": true,
            "type": "string",
            "values": [
                "Ensembl",
                "Refgene"
            ]
        },
        {
            "advanced": true,
            "default": "",
            "description": "A GOR file that includes chrom,pos,ref,call and a ref_af column, if no file is provided freq_max.gorz will be used.",
            "display_name": "Population frequency file",
            "name": "frequency_file",
            "optional": true,
            "type": "file"
        },
        {
            "advanced": true,
            "default": "false",
            "description": "Use gnomad frequency file for allele frequencies instead of freq_max (extra cols provided are gnomad_af_filtered, gnomad_exomes_qc,gnomad_genomes_qc,gnomad_het,gnomad_hom)",
            "display_name": "Use gnomad frequency file",
            "name": "use_gnomad_freq_file",
            "optional": true,
            "type": "string",
            "values": [
                "true",
                "false"
            ]
        }
    ],
    "category": "system",
    "column_metadata": null,
    "create_date": "2019-10-25T15:14:21.626172",
    "file_contents": "test_template:\n  template_name: test_template\n  organization: wxnc\n  category: system\n  version_info: Version 1.0.0, 2019-10-25\n  version: 1.0.0\n  min_ref_data_version: 95.3.0\n  package_version: <GENERATED BY CI LOOP>\n  dialog_group: system\n  list_description: Sample and Variant context, annotation view\n  description: |\n    <div style=\"margin:10px;\"><font size = \"4\">\n    <font size=\"4.5\"><p>This Report builder returns twofold results;\n    1) Sample specific information, reported when annotation view is opened from advanced report, in the pop-up header. Parental information is optional.\n    2) Variant specific information, reported when variant interpretation is opened in the page header.</p></font>\n    </font>\n\n    <a style=\"color:#0b68b2;\"><b><font size=\"4\">Basic parameters</b></a><table style=\"border-spacing:10\">\n    <tr><td><span style=\"color:#00aeef\">var_chrom </span> </td><td>Chromosome number.</td></tr>\n    <tr><td><span style=\"color:#00aeef\">var_pos </span> </td><td>Chromosome position.</td></tr>\n    <tr><td><span style=\"color:#00aeef\">var_reference </span> </td><td>Nucleotide base in the reference genome (A, C, T or G).</td></tr>\n    <tr><td><span style=\"color:#00aeef\">var_call </span> </td><td>Nucleotide base in the alternate allele (A, C, T or G).</td></tr>\n    <tr><td><span style=\"color:#00aeef\">var_gene_symbol </span> </td><td>Gene symbol</td></tr>\n    <tr><td><span style=\"color:#00aeef\">var_transcript </span> </td><td>Transcript</td></tr>\n    <tr><td><span style=\"color:#00aeef\">preopulated_result</span> </td><td>Prepopulated GREGOR result file</td></tr>\n    <tr><td><span style=\"color:#00aeef\">index_case</span> </td><td>subjectID of index.</td></tr>\n    <tr><td><span style=\"color:#00aeef\">candidate_gene_report_file</span> </td><td>Candidate gene report file</td></tr>\n    </table></font>\n\n    <a style=\"color:#0b68b2;\"><b>\n    <font size=\"4\">Version Information</b></a><table style=\"border-spacing:10\">\n    <font size=\"3.5\">Version 2.1.0, 2019-09-10</font><br>\n    <font size=\"3.5\">Package version <GENERATED BY CI LOOP></font><br>\n    </table></font>\n    </table></font></div>\n\n  query: |\n    <#setting locale=\"en_US\">\n    <#setting number_format=\"computer\">\n\n    create ##dummy## = gor #genes# | top 1; ${br} ${br}\n\n    def ##var_chrom## = ${var_chrom.val};\n    def ##var_pos## = ${var_pos.val};\n    def ##var_reference## = '${var_reference.val}';\n    def ##var_call## = '${var_call.val}';\n    def ##var_gene_symbol## = '${var_gene_symbol.val}';\n    def ##var_transcript## = '${var_transcript.val}';\n    def ##index_case## = ${index_case.val};\n    def ##vcf_wgs_anno## = ${prepopulated_result.val};\n\n    <#if candidate_gene_report_file.val?has_content>\n      def ##candidate_gene_report_file## = ${candidate_gene_report_file.val};\n    </#if>\n    <#if vep_gene_reference.val == \"Ensembl\">\n      def ##vep_single## = ${vep_path.val}/vep_single_wgs.gord;\n    <#else>\n      def ##vep_single## = ${vep_path.val}/vepref_single_wgs.gord;\n    </#if>\n    def ##ref## = ${ref_path.val};\n    def ##gnomad_freq## = ##ref##/variants/gnomad_freq.gorz;\n    <#if frequency_file.val?has_content>\n      def ##freq_max_file## = ${frequency_file.val};\n    <#elseif use_gnomad_freq_file.val==\"true\">\n      def ##freq_max_file## = ##gnomad_freq##;\n    <#else>\n      def ##freq_max_file## = ##ref##/variants/freq_max.gorz;\n    </#if>\n    def ##gmap## = ##ref##/ensgenes/ensgenes.map;\n\n    <#if gene_panel_info_file.val??>\n      <#assign genepanelinfofile = gene_panel_info_file.val >\n    <#else>\n      <#assign genepanelinfofile = \"\" >\n    </#if>\n\n    def ##genepanelinfo## = ${genepanelinfofile};\n\n    <#macro gorrow_genesymbol>\n      gorrow ##var_chrom##,##var_pos##,##var_pos##\n      | calc Reference ##var_reference##\n      | calc Call ##var_call##\n      | calc gene_symbol ##var_gene_symbol##\n      <#if var_transcript.val?has_content>\n        | calc feature ##var_transcript##\n      </#if>\n      | hide #3\n      | rename #2 Pos\n    </#macro>\n\n    <#if candidate_gene_report_file.val?has_content>\n      create ##candidate_gene_info## = <@gorrow_genesymbol />\n      | join -varseg -r -f 10 -xl gene_symbol -xr gene_symbol -e 'NaN' <(gor ##candidate_gene_report_file##\n      | calc ep gene_candidate_phenotypes\n      | split ep\n      | map -c ep -h <(nor <(gor ##candidate_gene_report_file##\n      | split gene_candidate_phenotypes\n      | group genome -gc gene_candidate_phenotypes -dis -sc gene_symbol)\n      | select GENE_candidate_Phenotypes,dis_GENE_symbol\n      | calc pheno_significance 1.0/dis_GENE_symbol)\n      | group 1 -gc 3-ep[-1] -sum -fc pheno_significance\n      | rename sum_pheno_significance Gene_Cand_PhenoScore\n      | map -c gene_symbol ##gmap## -n gene_aliases -m 'missing'\n      | split gene_aliases\n      | replace gene_symbol if(gene_aliases != 'missing',gene_aliases,gene_symbol)\n      | hide gene_aliases)\n      | select 1-4,gene_candidate_phenotypes;\n    </#if>\n\n    <#if prepopulated_result.val?has_content>\n      <@gorrow_genesymbol />\n      <#if var_transcript.val?has_content>\n        | varjoin -l -e 'NaN' -r -xl gene_symbol,feature -xr gene_symbol,feature <(gor ##vcf_wgs_anno## | where PN=##index_case##\n        | select 1-4,gene_symbol,zygosity,feature,callcopies,callratio,depth,GT_info,GT_IHE,mother_*,father_*,ref_af,VEP_max_score,rsIDs,VEP_impact,VEP_max_consequence,gene_cov )\n        | hide gene_symbolx,featurex\n      <#else>\n        | varjoin -l -e 'NaN' -r -xl gene_symbol -xr gene_symbol <(gor ##vcf_wgs_anno## | where PN=##index_case##\n        | select 1-4,gene_symbol,zygosity,feature,callcopies,callratio,depth,GT_info,GT_IHE,mother_*,father_*,ref_af,VEP_max_score,rsIDs,VEP_impact,VEP_max_consequence,gene_cov,qc_consequence_rank,transcript_source )\n        | hide gene_symbolx\n        <#if hgmd_transcripts_only.val == \"true\">\n          | where transcript_source LIKE 'is_hgmd*'\n        </#if>\n        <#if genepanelinfofile!=\"\">\n          | map -c gene_symbol -h -m '' <(nor -h ##genepanelinfo## | select gene_symbol,Gene_DefTrans)\n          | replace qc_consequence_rank if(containsany(refgene,Gene_DefTrans),0,qc_consequence_rank)\n        </#if>\n        | granno 1 -gc reference,call,gene_symbol -min -ic qc_consequence_rank\n        | where qc_consequence_rank=min_qc_consequence_rank\n        | granno 1 -gc reference,call,gene_symbol -min -set -ic qc_consequence_rank -sc feature\n        | where feature=min_feature\n        | hide min_*,set_*\n      </#if>\n      | distinct\n      | calc varType if(len(reference)=len(call),'sub',if(len(call)<len(reference) and substr(reference,0,len(call)) = call,'del',if(len(call)>len(reference) and substr(call,0,len(reference)) = reference,'ins','indel') ))\n      | calc hetORhom_type if(zygosity != 'NaN',zygosity+'_','')+varType\n      | hide varType,zygosity\n      <#if candidate_gene_report_file.val?has_content>\n        | varjoin -l -r -e 'NaN' <(gor [##candidate_gene_info##])\n      </#if>\n    <#else>\n      <@gorrow_genesymbol />\n      | varjoin -l -r -e '0.0' <(gor ##freq_max_file##\n      <#if use_gnomad_freq_file.val==\"true\">\n        | select 1-4,gnomad_af\n        | rename gnomad_af ref_af\n      <#else>\n        | select 1-4,max_af\n        | rename max_af ref_af\n      </#if>\n        | replace ref_af form(ref_af,5,5)\n        | distinct)\n      | varjoin -l -r -xr gene_symbol -xl gene_symbol -e 'NaN' <(gor ##vep_single## | select 1-4,gene_symbol,max_impact,max_consequence)\n      | hide gene_symbolx\n    </#if>\n\n  arguments:\n   - name: var_gene_symbol\n     optional: no\n     default: \"\"\n     type: string\n   - name: var_chrom\n     optional: no\n     default: \"\"\n     type: string\n   - name: var_pos\n     optional: no\n     default: \"\"\n     type: string\n   - name: var_reference\n     optional: no\n     default: \"\"\n     type: string\n   - name: var_call\n     optional: no\n     default: \"\"\n     type: string\n   - name: var_transcript\n     optional: yes\n     default: \"\"\n     type: string\n   - name: prepopulated_result\n     display_name: File holding the prepopulated mendel result\n     description:\n     optional: yes\n     default: \"\"\n     type: file\n   - name: index_case\n     optional: yes\n     type: string\n     single_selection: yes\n     values_path: SubjectReports/All.rep.link\n     quoted: true\n     format:\n       keywords: \"%s\"\n       values: \"%s\"\n       empty: \"'NONE'\"\n   - name: candidate_gene_report_file\n     optional: yes\n     type: file\n     default: \"\"\n   - name: gene_panel_info_file\n     display_name: Gene panel info file\n     optional: yes\n     type: file\n     default: \"\"\n   - name: hgmd_transcripts_only\n     display_name: Show only HGMD refgene transcripts\n     description:\n     optional: yes\n     type: string\n     default: \"false\"\n     values: [\"true\",\"false\"]\n   - name: ref_path\n     display_name: Reference path\n     description: Path to the reference data directory.\n     advanced: yes\n     optional: yes\n     type: string\n     default: \"ref\"\n   - name: vep_path\n     display_name: VEP Path\n     description: Path to the VEP directory\n     advanced: yes\n     optional: yes\n     type: string\n     default: \"source/anno/vep_v85\"\n   - name: vep_gene_reference\n     display_name: VEP gene reference\n     description: Select whether to use Ensembl or Refgene VEP reference data.\n     advanced: yes\n     optional: yes\n     type: string\n     default: \"Refgene\"\n     values: [\"Ensembl\",\"Refgene\"]\n   - name: frequency_file\n     display_name: Population frequency file\n     description: A GOR file that includes chrom,pos,ref,call and a ref_af column, if no file is provided freq_max.gorz will be used.\n     advanced: yes\n     optional: yes\n     type: file\n     default: \"\"\n   - name: use_gnomad_freq_file\n     display_name: Use gnomad frequency file\n     description: Use gnomad frequency file for allele frequencies instead of freq_max (extra cols provided are gnomad_af_filtered, gnomad_exomes_qc,gnomad_genomes_qc,gnomad_het,gnomad_hom)\n     advanced: yes\n     optional: yes\n     type: string\n     values: [\"true\",\"false\"]\n     default: \"false\"\n\n  perspectives:\n  - name: \"Default\"\n    group: \"ALL\"\n    default: no\n    filter:\n    initial_columns: [\"chrom\",\"Pos\",\"Reference\",\"Call\",\"gene_symbol\",\"REF_AF\",\"Max_Score\",\"rsIDs\",\"hetORhom_type\",\"Max_Impact\",\"max_consequence\",\"gene_cov\",\"GT_info\",\"GENE_candidate_Phenotypes\"]\n  - name: \"VariantContext\"\n    group: \"ALL\"\n    default: no\n    filter:\n    initial_columns: [\"hetORhom_type\",\"max_consequence\",\"Max_Impact\",\"MAX_AF\",\"Max_Score\",\"gene_cov\"]\n  - name: \"SampleContext\"\n    group: \"ALL\"\n    default: no\n    filter:\n    initial_columns: [\"REF_AF\",\"Max_Score\",\"rsIDs\",\"GT_info\",\"hetORhom_type\",\"gene_cov\",\"GENE_candidate_Phenotypes\"]\n",
    "full_name": "wxnc/system/test_template/1.0.0",
    "id": "3",
    "links": {
        "category": "https://test.wuxinextcode.com/api/query/templates/wxnc/system/",
        "execute": "https://test.wuxinextcode.com/api/query/templates/wxnc/system/test_template/1.0.0/execute",
        "organization": "https://test.wuxinextcode.com/api/query/templates/wxnc/",
        "render": "https://test.wuxinextcode.com/api/query/templates/wxnc/system/test_template/1.0.0/render",
        "self": "https://test.wuxinextcode.com/api/query/templates/wxnc/system/test_template/1.0.0/"
    },
    "list_description": "Sample and Variant context, annotation view",
    "min_ref_data_version": "95.3.0",
    "name": "test_template",
    "organization": "wxnc",
    "perspectives": [
        {
            "default": false,
            "filter": null,
            "group": "ALL",
            "initial_columns": [
                "chrom",
                "Pos",
                "Reference",
                "Call",
                "gene_symbol",
                "REF_AF",
                "Max_Score",
                "rsIDs",
                "hetORhom_type",
                "Max_Impact",
                "max_consequence",
                "gene_cov",
                "GT_info",
                "GENE_candidate_Phenotypes"
            ],
            "name": "Default"
        },
        {
            "default": false,
            "filter": null,
            "group": "ALL",
            "initial_columns": [
                "hetORhom_type",
                "max_consequence",
                "Max_Impact",
                "MAX_AF",
                "Max_Score",
                "gene_cov"
            ],
            "name": "VariantContext"
        },
        {
            "default": false,
            "filter": null,
            "group": "ALL",
            "initial_columns": [
                "REF_AF",
                "Max_Score",
                "rsIDs",
                "GT_info",
                "hetORhom_type",
                "gene_cov",
                "GENE_candidate_Phenotypes"
            ],
            "name": "SampleContext"
        }
    ],
    "user": null,
    "version": "1.0.0"
}