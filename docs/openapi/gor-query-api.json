{
    "basePath": "",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "Category": {
            "properties": {
                "create_date": {
                    "description": "ISO8601 formatted create date",
                    "format": "date-time",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/CategoryLinks"
                },
                "name": {
                    "description": "The name of a category within in an organization",
                    "type": "string"
                },
                "organization": {
                    "description": "The name of a organization that owns this category",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CategoryLinks": {
            "properties": {
                "organization": {
                    "description": "Organization that owns this category",
                    "type": "string"
                },
                "self": {
                    "description": "Templates for this category",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Error": {
            "properties": {
                "code": {
                    "description": "HTTP status code",
                    "example": 200,
                    "type": "integer"
                },
                "error": {
                    "$ref": "#/definitions/InnerError"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InnerError": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Organization": {
            "properties": {
                "create_date": {
                    "description": "ISO8601 formatted create date",
                    "format": "date-time",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/OrganizationLinks"
                },
                "name": {
                    "description": "Globally unique name for an organization",
                    "type": "string"
                },
                "protected": {
                    "description": "Is this organization only writable by admin?",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "OrganizationLinks": {
            "properties": {
                "self": {
                    "description": "Categories for this organization",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PerspectiveLinks": {
            "properties": {
                "name": {
                    "description": "name of the perspective",
                    "type": "string"
                },
                "ref": {
                    "description": "link to resource",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Query": {
            "properties": {
                "args": {
                    "description": "Arguments passed to the template (only if template query)",
                    "type": "object"
                },
                "available": {
                    "description": "Are results for this query available",
                    "type": "boolean"
                },
                "complete_date": {
                    "description": "ISO8601 formatted complete date",
                    "format": "date-time",
                    "type": "string"
                },
                "date_submitted": {
                    "description": "ISO8601 formatted submit date (for backwards-compatibility)",
                    "format": "date-time",
                    "type": "string"
                },
                "details": {
                    "description": "Additional information about the query",
                    "type": "object"
                },
                "error": {
                    "description": "Error information about the query if it FAILED. Includes 'description' and 'type' string keys",
                    "type": "object"
                },
                "id": {
                    "type": "integer"
                },
                "links": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/QueryLinks"
                        }
                    ],
                    "description": "The URLs to the resources related to this query"
                },
                "progress": {
                    "description": "Progress information for running job",
                    "type": "object"
                },
                "project_name": {
                    "description": "The project into which the query was submitted",
                    "type": "string"
                },
                "query": {
                    "description": "The query string that was executed (if any)",
                    "type": "string"
                },
                "query_id": {
                    "description": "Unique ID of this query",
                    "type": "integer"
                },
                "relations": {
                    "description": "Virtual relations associated with the query",
                    "type": "object"
                },
                "results": {
                    "description": "Results, equal or less than requested rows, normally null. To get the rest, query the result endpoint.",
                    "type": "object"
                },
                "start_date": {
                    "description": "ISO8601 formatted start date",
                    "format": "date-time",
                    "type": "string"
                },
                "stats": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/QueryStats"
                        }
                    ],
                    "description": "Various stats about the query"
                },
                "status": {
                    "description": "The current status of the query",
                    "enum": [
                        "PENDING",
                        "RUNNING",
                        "DONE",
                        "CANCELLING",
                        "CANCELLED",
                        "FAILED"
                    ],
                    "example": "PENDING",
                    "type": "string"
                },
                "submit_date": {
                    "description": "ISO8601 formatted submit date",
                    "format": "date-time",
                    "type": "string"
                },
                "template_name": {
                    "description": "The template associated with this query (if any)",
                    "type": "string"
                },
                "user_name": {
                    "description": "The user that submitted the query",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryLinks": {
            "properties": {
                "perspectives": {
                    "items": {
                        "$ref": "#/definitions/PerspectiveLinks"
                    },
                    "type": "array"
                },
                "result": {
                    "description": "Fully qualified URL of the results for the query, once it is finished",
                    "type": "string"
                },
                "self": {
                    "description": "Fully qualified URL of the template query resource itself",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QueryStats": {
            "properties": {
                "column_count": {
                    "description": "Number of columns in results",
                    "type": "integer"
                },
                "end_timestamp": {
                    "description": "Unix timestamp when the GOR Server finished running the query",
                    "type": "integer"
                },
                "line_count": {
                    "description": "Number of lines in results",
                    "type": "integer"
                },
                "size_bytes": {
                    "description": "Size of the results in bytes",
                    "type": "integer"
                },
                "start_timestamp": {
                    "description": "Unix timestamp when the GOR Server started running the query",
                    "type": "integer"
                },
                "submit_timestamp": {
                    "description": "Unix timestamp when the query was submitted to the GOR Server",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RenderedTemplate": {
            "properties": {
                "query": {
                    "description": "rendered template query",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SimpleQuery": {
            "properties": {
                "links": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/QueryLinks"
                        }
                    ],
                    "description": "The URLs to the resources related to this query"
                },
                "project_name": {
                    "description": "The project into which the query was submitted",
                    "type": "string"
                },
                "query_id": {
                    "description": "Unique ID of this query",
                    "type": "integer"
                },
                "status": {
                    "description": "The current status of the query",
                    "enum": [
                        "PENDING",
                        "RUNNING",
                        "DONE",
                        "CANCELLING",
                        "CANCELLED",
                        "FAILED"
                    ],
                    "example": "PENDING",
                    "type": "string"
                },
                "submit_date": {
                    "description": "ISO8601 formatted submit date",
                    "format": "date-time",
                    "type": "string"
                },
                "user_name": {
                    "description": "The user that submitted the query",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Template": {
            "properties": {
                "arguments": {
                    "description": "Defined arguments this query template accepts",
                    "type": "object"
                },
                "category": {
                    "description": "The category that this template belongs to",
                    "type": "string"
                },
                "column_metadata": {
                    "description": "The package version of the query template",
                    "type": "string"
                },
                "create_date": {
                    "description": "ISO8601 formatted create date",
                    "format": "date-time",
                    "type": "string"
                },
                "file_contents": {
                    "description": "The raw contents of the query template YAML file",
                    "type": "string"
                },
                "full_name": {
                    "description": "The globally unique name of a query template",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for this template",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/TemplateLinks"
                },
                "list_description": {
                    "description": "The description of a query template",
                    "type": "string"
                },
                "min_ref_data_version": {
                    "description": "Minimum reference data version for this template",
                    "type": "string"
                },
                "name": {
                    "description": "The unique name of a query template within a given category",
                    "type": "string"
                },
                "organization": {
                    "description": "The organization that this template belongs to",
                    "type": "string"
                },
                "perspectives": {
                    "description": "Available perspectives for this query template",
                    "type": "object"
                },
                "user": {
                    "description": "The user that created this template",
                    "type": "string"
                },
                "version": {
                    "description": "Version info for this query template",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TemplateLinks": {
            "properties": {
                "category": {
                    "description": "Category that this template is in",
                    "type": "string"
                },
                "execute": {
                    "description": "Endpoint for executing the template",
                    "type": "string"
                },
                "organization": {
                    "description": "Organization that owns the category",
                    "type": "string"
                },
                "render": {
                    "description": "Endpoint for rendering the template",
                    "type": "string"
                },
                "self": {
                    "description": "The Template Resource",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TemplateSimple": {
            "properties": {
                "category": {
                    "description": "The category that this template belongs to",
                    "type": "string"
                },
                "create_date": {
                    "description": "ISO8601 formatted create date",
                    "format": "date-time",
                    "type": "string"
                },
                "full_name": {
                    "description": "The globally unique name of a query template",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID for this template",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/TemplateLinks"
                },
                "list_description": {
                    "description": "The description of a query template",
                    "type": "string"
                },
                "name": {
                    "description": "The unique name of a query template within a given category",
                    "type": "string"
                },
                "organization": {
                    "description": "The organization that this template belongs to",
                    "type": "string"
                },
                "version": {
                    "description": "Version info for this query template",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "description": "GOR Query API executes and manages GOR queries, query templates, and templated queries (queries executed from a rendered template).\n\nGOR query results can be returned as JSON or raw tab-formatted values.\n \nOnce a query is complete, its GOR results can be retrieved. If the Accept HTTP header is 'application/json' then JSON is returned. Otherwise raw tab-separated values are returned (TSV, 'application/tab-separated-values').\n\nThe JSON output is a somewhat freeform object-in-object list-of-maps structure:\n\n\n    [{'column1': 'value-l1c1', 'column2': 'value-l1c1'},    {'column1': 'value-l1c1', 'column2': 'value-l1c1'}]\nIf the Accept header is 'application/json+compact' then the JSON follows the following format:\n{    'header': ['column1', 'column2'],    'data: {       [[value-l1c1','value-l1c1'], [value-l1c1','value-l1c1']]     }}\nFor information on how queries or templates work,or information on the YAML data required to create new templates, please refer to CSA/GOR manuals or the documentation in the GOR Developer Console in your instance.",
        "title": "GOR Query API",
        "version": "1.9.0"
    },
    "paths": {
        "/api/query/": {
            "get": {
                "description": "Get information about the service and currently authenticated user, if available.\n\n\n\nThe *json_limit* constant defines how many lines of query results may be returned in a single request.\nIf a result is longer than that then pagination kicks in.",
                "operationId": "get_root",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "API Information",
                "tags": [
                    "root"
                ]
            }
        },
        "/api/query/query/": {
            "get": {
                "operationId": "get_queries",
                "parameters": [
                    {
                        "description": "Project to view",
                        "in": "query",
                        "name": "project",
                        "type": "string"
                    },
                    {
                        "description": "Filter queries by status",
                        "in": "query",
                        "name": "status",
                        "type": "string"
                    },
                    {
                        "description": "User ID of the submitter",
                        "in": "query",
                        "name": "user_id",
                        "type": "integer"
                    },
                    {
                        "description": "User name of the submitter",
                        "in": "query",
                        "name": "user_name",
                        "type": "string"
                    },
                    {
                        "default": 50,
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SimpleQuery"
                            },
                            "type": "array"
                        }
                    }
                },
                "tags": [
                    "query"
                ]
            },
            "post": {
                "description": "The query is validated and submitted to the GOR server for execution.\nResults are delivered in a dedicated results endpoint under here.",
                "operationId": "post_queries",
                "parameters": [
                    {
                        "description": "The GOR Query we want executed (e.g. ``\"gor #dbsnp# | top 100\"``)",
                        "in": "query",
                        "name": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the project the query should be executed on",
                        "in": "query",
                        "name": "project",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "default",
                        "description": "The type of the job being run, for queue routing purposes",
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "The file that the query results should be saved in (must start with user_data/)",
                        "in": "query",
                        "name": "persist",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "Virtual relations to be resolved within the query",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "relations",
                        "type": "array"
                    },
                    {
                        "description": "Number of seconds to wait for query to complete before returning PENDING",
                        "in": "query",
                        "name": "wait",
                        "type": "number"
                    },
                    {
                        "description": "Number of rows to return from this call. wait must be larger than zero",
                        "in": "query",
                        "name": "results",
                        "type": "integer"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    },
                    "400": {
                        "description": "Unauthorized"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Submit a GOR query",
                "tags": [
                    "query"
                ]
            }
        },
        "/api/query/query/{query_id}": {
            "delete": {
                "operationId": "delete_query",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Cancels a running query",
                "tags": [
                    "query"
                ]
            },
            "get": {
                "operationId": "get_query",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Check the status of a query",
                "tags": [
                    "query"
                ]
            },
            "parameters": [
                {
                    "description": "The ID of a query that has been submitted to GOR",
                    "in": "path",
                    "name": "query_id",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/query/query/{query_id}/result": {
            "get": {
                "description": "Once a query is complete, its GOR results can be retrieved. If the Accept HTTP header is 'application/json',\nthen JSON is returned. Otherwise raw tab-separated values are returned. As JSON, each line will be returned as\na key-value object-in-object format approximately like this:\n\n    [{\"column1\": \"value-l1c1\", \"column2\": \"value-l1c1\"},\n    {\"column1\": \"value-l1c1\", \"column2\": \"value-l1c1}]\n\nPlease note that in JSON format there is a limit on how many lines can be returned at a time.\nIn that case results will include pagination links (\"next\").",
                "operationId": "get_result",
                "parameters": [
                    {
                        "description": "GOR query filter to apply to results",
                        "in": "query",
                        "name": "perspective",
                        "type": "string"
                    },
                    {
                        "description": "GOR query filter to apply to results",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Maximum number of rows to return",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "Number of rows to skip",
                        "in": "query",
                        "name": "offset",
                        "type": "integer"
                    },
                    {
                        "description": "Comma separated list of columns to sort on, including direction. Example: `POS asc,Chrom desc`",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Skip the header, used for paging",
                        "in": "query",
                        "name": "skipheader",
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/json+compact",
                    "text/tab-separated-values"
                ],
                "responses": {
                    "200": {
                        "description": "Sucessful. Results in JSON/TSV format; See above."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found. Query not found, or no results exist yet. See error message.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "summary": "Gets the results of a completed query",
                "tags": [
                    "query"
                ]
            },
            "parameters": [
                {
                    "description": "The ID of a query that has been submitted to GOR",
                    "in": "path",
                    "name": "query_id",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/query/templates/": {
            "get": {
                "operationId": "get_templates",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Organization"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Return a list of organizations",
                "tags": [
                    "templates"
                ]
            },
            "post": {
                "description": "Assumes the organization and category come from the yaml string\nand creates the resources as needed.\n\nFor information on YAML data to create new templates, please refer to CSA/GOR manuals or the documentation\navailable in the GOR Developer Console in your instance.",
                "operationId": "post_templates",
                "parameters": [
                    {
                        "description": "The query template represented as a YAML string. See above.",
                        "in": "query",
                        "name": "yaml",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TemplateSimple"
                        }
                    }
                },
                "summary": "Receives and stores a new template from YAML",
                "tags": [
                    "templates"
                ]
            }
        },
        "/api/query/templates/{organization}/": {
            "delete": {
                "operationId": "delete_categories",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete an organization including all categories and templates",
                "tags": [
                    "templates"
                ]
            },
            "get": {
                "operationId": "get_categories",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Category"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Return a list of categories",
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "organization",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/query/templates/{organization}/{category}/": {
            "delete": {
                "operationId": "delete_actual_templates",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete a category including all templates",
                "tags": [
                    "templates"
                ]
            },
            "get": {
                "operationId": "get_actual_templates",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TemplateSimple"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Return all templates in this category",
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "category",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/query/templates/{organization}/{category}/{name}/": {
            "delete": {
                "operationId": "delete_template_by_name",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete a template",
                "tags": [
                    "templates"
                ]
            },
            "get": {
                "operationId": "get_template_by_name",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    }
                },
                "summary": "Return a single template which satisfies the criteria",
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "category",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/query/templates/{organization}/{category}/{name}/{version}/": {
            "delete": {
                "operationId": "delete_template_by_name",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Delete a template",
                "tags": [
                    "templates"
                ]
            },
            "get": {
                "operationId": "get_template_by_name",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    }
                },
                "summary": "Return a single template which satisfies the criteria",
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "category",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "version",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/query/templates/{organization}/{category}/{name}/{version}/execute": {
            "parameters": [
                {
                    "in": "path",
                    "name": "organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "category",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "version",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "operationId": "post_execute_template_by_name",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Query"
                        }
                    }
                },
                "summary": "Renders a template and executes it through the query service",
                "tags": [
                    "templates"
                ]
            }
        },
        "/api/query/templates/{organization}/{category}/{name}/{version}/render": {
            "get": {
                "description": "Pass arguments into the template either through the query string, e.g. ?key1=val1&key2=val2\nor as a dictionary in the body as {\"args\": {\"key1\": \"val1\", \"key2\": \"val2\"}}",
                "operationId": "get_render_template_by_name",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RenderedTemplate"
                        }
                    }
                },
                "summary": "Renders a template ready for querying",
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "organization",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "category",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "version",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/query/templates/{template_id}/": {
            "get": {
                "operationId": "get_template_by_id",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    }
                },
                "summary": "Gets a stored template",
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "template_id",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "produces": [
        "application/json"
    ],
    "responses": {
        "MaskError": {
            "description": "When any error occurs on mask"
        },
        "ParseError": {
            "description": "When a mask can't be parsed"
        }
    },
    "security": [
        {
            "jwt": []
        }
    ],
    "securityDefinitions": {
        "jwt": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Endpoints for query interaction",
            "name": "query"
        },
        {
            "name": "query"
        },
        {
            "description": "System endpoints",
            "name": "root"
        },
        {
            "description": "Endpoints for interaction with query templates",
            "name": "templates"
        }
    ]
}