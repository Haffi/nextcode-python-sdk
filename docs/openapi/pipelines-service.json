{
    "basePath": "",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "Job": {
            "properties": {
                "customer_name": {
                    "description": "Name of the customer, for tracking purposes.",
                    "type": "string"
                },
                "date_completed": {
                    "description": "Timestamp when the job was completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "date_started": {
                    "description": "Timestamp when the job was started",
                    "format": "date-time",
                    "type": "string"
                },
                "date_submitted": {
                    "description": "Timestamp when the job was submitted to the queue.",
                    "format": "date-time",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "description": "Raw job manifest as submitted by the job creator (sanitized to remove secrets)",
                    "type": "object"
                },
                "duration": {
                    "description": "Duration of run (seconds)",
                    "type": "integer"
                },
                "external_id": {
                    "description": "Caller-defined external reference identifier from job manifest",
                    "type": "string"
                },
                "input": {
                    "description": "Information about input files",
                    "items": {
                        "$ref": "#/definitions/JobInputOutput"
                    },
                    "type": "array"
                },
                "instances": {
                    "description": "Information about the job instance (always a list of zero or one)",
                    "items": {
                        "$ref": "#/definitions/JobInstanceSimple"
                    },
                    "type": "array"
                },
                "job_id": {
                    "description": "Internal unique ID of this job",
                    "type": "integer"
                },
                "links": {
                    "$ref": "#/definitions/JobLinks"
                },
                "messages": {
                    "description": "Messages output from the job",
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "organization_id": {
                    "type": "integer"
                },
                "organization_name": {
                    "type": "string"
                },
                "output": {
                    "description": "Information about output files",
                    "items": {
                        "$ref": "#/definitions/JobInputOutput"
                    },
                    "type": "array"
                },
                "output_config": {
                    "$ref": "#/definitions/JobOutputConfig"
                },
                "pipeline_definition": {
                    "description": "Pipeline definition file",
                    "type": "object"
                },
                "pipeline_name": {
                    "description": "Name of the pipeline. e.g. 'sentieon_germline'.",
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "project_name": {
                    "type": "string"
                },
                "region": {
                    "description": "AWS region where the job was run",
                    "type": "string"
                },
                "sample_name": {
                    "description": "Name of the sample, for tracking purposes. Typically a globally unique PN.",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "QUEUED",
                        "LAUNCHING",
                        "INITIALIZING",
                        "RUNNING",
                        "FAILED",
                        "FINISHED",
                        "CANCELLED",
                        "ALL"
                    ],
                    "example": "QUEUED",
                    "type": "string"
                },
                "status_date": {
                    "description": "Timestamp when status last changed",
                    "type": "string"
                },
                "steps": {
                    "description": "Information about steps, including pending steps",
                    "items": {
                        "$ref": "#/definitions/JobStep"
                    },
                    "type": "array"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobEvent": {
            "properties": {
                "date_time": {
                    "description": "ISO8601 formatted timestamp when the event was created",
                    "format": "date-time",
                    "type": "string"
                },
                "event": {
                    "description": "Raw event data as a JSON string",
                    "type": "object"
                },
                "event_guid": {
                    "description": "Unique GUID for this event sent by the event instigator to ensure non-duplicate events",
                    "type": "string"
                },
                "event_id": {
                    "description": "Unique ID of the event",
                    "type": "integer"
                },
                "event_name": {
                    "description": "Name of this event type",
                    "type": "string"
                },
                "job_id": {
                    "description": "The job associated with this event",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobFiles": {
            "properties": {
                "input": {
                    "description": "Information about input files",
                    "items": {
                        "$ref": "#/definitions/JobInputOutput"
                    },
                    "type": "array"
                },
                "output": {
                    "description": "Information about output files",
                    "items": {
                        "$ref": "#/definitions/JobInputOutput"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobInputOutput": {
            "properties": {
                "file_name": {
                    "description": "Name of the file",
                    "type": "string"
                },
                "file_size": {
                    "description": "File size (in bytes) or -1 if the file was not found.",
                    "type": "integer"
                },
                "key": {
                    "description": "Key to identify the file grouping",
                    "type": "string"
                },
                "remote_path": {
                    "description": "s3:// url of the object",
                    "type": "string"
                },
                "url": {
                    "description": "Signed https:// url of the object",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobInstance": {
            "properties": {
                "ami_details": {
                    "description": "AWS details about the AMI from which the EC2 instance is launched.",
                    "type": "object"
                },
                "date_time": {
                    "description": "Timestamp when the instance was launched.",
                    "format": "date-time",
                    "type": "string"
                },
                "details": {
                    "description": "AWS details about the EC2 instance at the time of creation.",
                    "type": "object"
                },
                "id": {
                    "description": "Internal ID of the instance resource.",
                    "type": "integer"
                },
                "instance_id": {
                    "description": "EC2 Instance ID",
                    "type": "string"
                },
                "is_spot": {
                    "description": "Is this a spot instance?",
                    "type": "boolean"
                },
                "job_id": {
                    "description": "The job associated with this instance",
                    "type": "integer"
                },
                "links": {
                    "$ref": "#/definitions/JobInstanceLinks"
                }
            },
            "type": "object"
        },
        "JobInstanceLinks": {
            "properties": {
                "current": {
                    "description": "Current status of the EC2 instance for the job",
                    "type": "string"
                },
                "metrics": {
                    "description": "Metrics for instance",
                    "type": "string"
                },
                "self": {
                    "description": "The Job EC2 Instance",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobInstanceMetric": {
            "properties": {
                "date_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobInstanceMetrics": {
            "properties": {
                "CPUUtilization": {
                    "items": {
                        "$ref": "#/definitions/JobInstanceMetric"
                    },
                    "type": "array"
                },
                "DiskSpaceUtilization": {
                    "items": {
                        "$ref": "#/definitions/JobInstanceMetric"
                    },
                    "type": "array"
                },
                "MemoryUtilization": {
                    "items": {
                        "$ref": "#/definitions/JobInstanceMetric"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobInstancePatch": {
            "properties": {
                "message": {
                    "description": "Description of the action that was performed",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobInstanceSimple": {
            "properties": {
                "date_time": {
                    "description": "Timestamp when the instance was launched.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Internal ID of the instance resource.",
                    "type": "integer"
                },
                "instance_id": {
                    "description": "EC2 Instance ID",
                    "type": "string"
                },
                "is_spot": {
                    "description": "Is this a spot instance?",
                    "type": "boolean"
                },
                "job_id": {
                    "description": "The job associated with this instance",
                    "type": "integer"
                },
                "links": {
                    "$ref": "#/definitions/JobInstanceLinks"
                }
            },
            "type": "object"
        },
        "JobLinks": {
            "properties": {
                "events": {
                    "description": "Events collection for the job",
                    "type": "string"
                },
                "files": {
                    "description": "Input and output files for the job",
                    "type": "string"
                },
                "instances": {
                    "description": "The EC2 Worker Instance that is running the job",
                    "type": "string"
                },
                "logs": {
                    "description": "Logs for the job",
                    "type": "string"
                },
                "self": {
                    "description": "The Job Resource",
                    "type": "string"
                },
                "steps": {
                    "description": "Steps collection for the job",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobLogs": {
            "properties": {
                "links": {
                    "description": "Link to the log stream",
                    "type": "object"
                },
                "log_groups": {
                    "description": "All log groups available to the job",
                    "items": {
                        "$ref": "#/definitions/JobLogsGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobLogsGroup": {
            "properties": {
                "description": {
                    "description": "Human readable description of the log group",
                    "type": "string"
                },
                "link": {
                    "description": "Link to the log stream",
                    "type": "string"
                },
                "log_group": {
                    "description": "Name of the cloudwatch log group",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobOutputConfig": {
            "properties": {
                "output_path": {
                    "description": "Folder into which output files are placed (Typically S3)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobPatch": {
            "properties": {
                "details": {
                    "description": "Details based on the action",
                    "type": "object"
                },
                "message": {
                    "description": "Description of the action that was performed",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobSimple": {
            "properties": {
                "customer_name": {
                    "description": "Name of the customer, for tracking purposes.",
                    "type": "string"
                },
                "date_completed": {
                    "description": "Timestamp when the job was completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "date_started": {
                    "description": "Timestamp when the job was started",
                    "format": "date-time",
                    "type": "string"
                },
                "date_submitted": {
                    "description": "Timestamp when the job was submitted to the queue.",
                    "format": "date-time",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "details": {
                    "description": "Raw job manifest as submitted by the job creator (sanitized to remove secrets)",
                    "type": "object"
                },
                "duration": {
                    "description": "Duration of run (seconds)",
                    "type": "integer"
                },
                "external_id": {
                    "description": "Caller-defined external reference identifier from job manifest",
                    "type": "string"
                },
                "instances": {
                    "description": "Information about the job instance (always a list of zero or one)",
                    "items": {
                        "$ref": "#/definitions/JobInstanceSimple"
                    },
                    "type": "array"
                },
                "job_id": {
                    "description": "Internal unique ID of this job",
                    "type": "integer"
                },
                "links": {
                    "$ref": "#/definitions/JobLinks"
                },
                "organization_id": {
                    "type": "integer"
                },
                "organization_name": {
                    "type": "string"
                },
                "output_config": {
                    "$ref": "#/definitions/JobOutputConfig"
                },
                "pipeline_name": {
                    "description": "Name of the pipeline. e.g. 'sentieon_germline'.",
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "project_name": {
                    "type": "string"
                },
                "region": {
                    "description": "AWS region where the job was run",
                    "type": "string"
                },
                "sample_name": {
                    "description": "Name of the sample, for tracking purposes. Typically a globally unique PN.",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "QUEUED",
                        "LAUNCHING",
                        "INITIALIZING",
                        "RUNNING",
                        "FAILED",
                        "FINISHED",
                        "CANCELLED",
                        "ALL"
                    ],
                    "example": "QUEUED",
                    "type": "string"
                },
                "status_date": {
                    "description": "Timestamp when status last changed",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobStep": {
            "properties": {
                "date_completed": {
                    "description": "Timestamp when the step completed.",
                    "format": "date-time",
                    "type": "string"
                },
                "date_heartbeat": {
                    "description": "Timestamp when the last heartbeat was sent for this step, every 60 seconds.",
                    "format": "date-time",
                    "type": "string"
                },
                "date_started": {
                    "description": "Timestamp when the step was started.",
                    "format": "date-time",
                    "type": "string"
                },
                "details": {
                    "description": "Context-sensitive details on the step status. Contains 'exit_code' and 'error' if the step failed",
                    "type": "object"
                },
                "job_id": {
                    "description": "The job associated with this step",
                    "type": "integer"
                },
                "job_step_id": {
                    "description": "Internal unique ID of this step",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of this step",
                    "enum": [
                        "PENDING",
                        "STARTING",
                        "RUNNING",
                        "COMPLETED",
                        "FAILED",
                        "KILLED"
                    ],
                    "example": "PENDING",
                    "type": "string"
                },
                "step_identifier": {
                    "description": "Step identifier from Nextflow",
                    "type": "string"
                },
                "step_name": {
                    "description": "Step Name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Pipeline": {
            "properties": {
                "author": {
                    "description": "Textual name of the creator",
                    "type": "string"
                },
                "description": {
                    "description": "Simple description of the pipeline",
                    "type": "string"
                },
                "input_files": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PipelineInputFiles"
                        }
                    ],
                    "description": "Information about input files"
                },
                "links": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PipelineLinks"
                        }
                    ],
                    "description": "Links"
                },
                "name": {
                    "description": "Unique name of the pipeline definition",
                    "type": "string"
                },
                "output": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PipelineOutput"
                        }
                    ],
                    "description": "Information about job output"
                },
                "script": {
                    "description": "Name of the Nextflow script file",
                    "type": "string"
                },
                "steps": {
                    "description": "Information about job steps",
                    "items": {
                        "$ref": "#/definitions/PipelineStep"
                    },
                    "type": "array"
                },
                "version": {
                    "description": "Pipeline version",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PipelineInputFiles": {
            "properties": {
                "file_name": {
                    "description": "Glob input filename",
                    "type": "string"
                },
                "num_files": {
                    "description": "Total number of expected input files",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PipelineLinks": {
            "properties": {
                "self": {
                    "description": "Fully qualified url of the pipeline resource",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PipelineListItem": {
            "properties": {
                "description": {
                    "description": "Simple description of the pipeline",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/PipelineLinks"
                },
                "name": {
                    "description": "Unique name of the pipeline definition",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PipelineOutput": {
            "properties": {
                "files": {
                    "items": {
                        "$ref": "#/definitions/PipelineOutputFile"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PipelineOutputFile": {
            "properties": {
                "filename": {
                    "description": "Output filename pattern",
                    "type": "string"
                },
                "param": {
                    "description": "File will be output if this param value is true in job manifest",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PipelineStep": {
            "properties": {
                "count": {
                    "description": "Number of times this step is expected to be executed",
                    "type": "integer"
                },
                "name": {
                    "description": "Step Name",
                    "type": "string"
                },
                "param": {
                    "description": "Step will be executed if this param value is true in job manifest",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Root": {
            "properties": {
                "app_info": {
                    "description": "Information about this service",
                    "type": "object"
                },
                "build_info": {
                    "description": "Basic service-agnostic build and version information",
                    "type": "object"
                },
                "current_user": {
                    "description": "Information about the calling user",
                    "type": "object"
                },
                "endpoints": {
                    "description": "Registered endpoints",
                    "type": "object"
                },
                "service_name": {
                    "description": "Name of this service",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User": {
            "properties": {
                "create_date": {
                    "description": "ISO8601 formatted create date",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/UserLinks"
                },
                "organization_id": {
                    "description": "Internal ID of the organization",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of the user",
                    "enum": [
                        "active",
                        "disabled"
                    ],
                    "example": "active",
                    "type": "string"
                },
                "user_id": {
                    "description": "Internal ID of the user",
                    "type": "integer"
                },
                "user_name": {
                    "description": "Unique Username of the user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserLinks": {
            "properties": {
                "self": {
                    "description": "Fully qualified url of the user resource",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "title": "API",
        "version": "1.8.13"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Get information about the service and currently authenticated user, if available",
                "operationId": "get_root",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Root"
                        }
                    }
                },
                "summary": "API Information",
                "tags": [
                    "root"
                ]
            }
        },
        "/health": {
            "get": {
                "description": "Returns empty body if health is OK, otherwise a 500 error",
                "operationId": "get_health",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Health check",
                "tags": [
                    "root"
                ]
            }
        },
        "/jobs/": {
            "get": {
                "description": "Query for submitted jobs with filters",
                "operationId": "get_jobs",
                "parameters": [
                    {
                        "description": "Internal user ID of the submitter.",
                        "in": "query",
                        "name": "user_id",
                        "type": "integer"
                    },
                    {
                        "description": "Username (email address) of the submitter. If the user is not found no jobs are returned.",
                        "in": "query",
                        "name": "user_name",
                        "type": "string"
                    },
                    {
                        "description": "Internal ID of the organization.",
                        "in": "query",
                        "name": "organization_id",
                        "type": "integer"
                    },
                    {
                        "description": "Name of the organization which owns the returned jobs. If the organization is not found no jobs are returned.",
                        "in": "query",
                        "name": "organization_name",
                        "type": "string"
                    },
                    {
                        "description": "Internal ID of the project.",
                        "in": "query",
                        "name": "project_id",
                        "type": "integer"
                    },
                    {
                        "description": "Name of the project which owns the returned jobs. If the project is not found no jobs are returned.",
                        "in": "query",
                        "name": "project_name",
                        "type": "string"
                    },
                    {
                        "description": "Name of the pipeline. e.g. 'sentieon_germline'.",
                        "in": "query",
                        "name": "pipeline_name",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "Status of the jobs. Note that status=ALL is a special case, otherwise only active statuses are returned.",
                        "enum": [
                            "QUEUED",
                            "LAUNCHING",
                            "INITIALIZING",
                            "RUNNING",
                            "FAILED",
                            "FINISHED",
                            "CANCELLED",
                            "ALL"
                        ],
                        "in": "query",
                        "name": "status",
                        "type": "string"
                    },
                    {
                        "description": "The Amazon Instance ID which ran the job.",
                        "in": "query",
                        "name": "instance_id",
                        "type": "string"
                    },
                    {
                        "description": "A specific job to query for.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Caller-defined external reference identifier from job manifest.",
                        "in": "query",
                        "name": "external_id",
                        "type": "string"
                    },
                    {
                        "description": "Name of the sample. Typically (but not necessarily) unique.",
                        "in": "query",
                        "name": "sample_name",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "Where did the ETL-pipelines build originate",
                        "enum": [
                            "ami",
                            "git",
                            "artifactory",
                            "url"
                        ],
                        "in": "query",
                        "name": "build_source",
                        "type": "string"
                    },
                    {
                        "description": "Build source for the ETL-pipelines package. Depends on build_source",
                        "in": "query",
                        "name": "build_context",
                        "type": "string"
                    },
                    {
                        "default": 50,
                        "description": "Number of results to return.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "deprecated, use 'X-Fields' request header instead",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "field",
                        "type": "array"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/JobSimple"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "View job list",
                "tags": [
                    "jobs"
                ]
            },
            "post": {
                "description": "This will create the job but not launch the worker. To do that you must POST on the instance\nresource collection for the job.",
                "operationId": "post_jobs",
                "parameters": [
                    {
                        "description": "Name of the pipeline definition",
                        "in": "query",
                        "name": "pipeline_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of the organization which will own this job. It will be created if it does not already exist.",
                        "in": "query",
                        "name": "organization_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of the project which will own this job. It will be created if it does not already exist.",
                        "in": "query",
                        "name": "project_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "Amazon IAM Keys for fetching input data and upload output data. Requires at least the following keys: 'download', 'upload'. Signature example: `{\"profile\": \"download\", \"aws_access_key_id\": \"xxx\", \"aws_secret_access_key\": \"xxx\", }`",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "iam_keys",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "The AWS region in which to launch the worker",
                        "in": "query",
                        "name": "region",
                        "type": "string"
                    },
                    {
                        "description": "Name of the customer, for tracking purposes. Can be referenced in output path.",
                        "in": "query",
                        "name": "customer_name",
                        "type": "string"
                    },
                    {
                        "description": "Username which to run the job on behalf of (defaults to calling user)",
                        "in": "query",
                        "name": "user_name",
                        "type": "string"
                    },
                    {
                        "description": "Name of the sample, for tracking purposes. Can be referenced in output path.",
                        "in": "query",
                        "name": "sample_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Freeform text description.",
                        "in": "query",
                        "name": "description",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "List of input files (s3:// links or DNANexus) (DEPRECATED)",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "files",
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "List of input files with key (e.g. {\"key\": \"samples\", \"files\": [\"s3://xxx/file1.gz\", \"s3:/xxx/file2.gz\"]})",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "input",
                        "type": "array"
                    },
                    {
                        "description": "Output folder into which to place output files (s3:// or DNANexus).                             Supports the following substitutions: `s3://bucket/{organization_name}/{project_name}/{user_name}/{sample_name}/{job_id}/`",
                        "in": "query",
                        "name": "output_path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "EC2 instance type which will run the job",
                        "in": "query",
                        "name": "instance_type",
                        "type": "string"
                    },
                    {
                        "description": "EBS Volume size in GB.",
                        "in": "query",
                        "name": "volume_size",
                        "type": "integer"
                    },
                    {
                        "description": "A custom local pipeline definition manifest for local development.",
                        "in": "query",
                        "name": "pipeline_definition",
                        "type": "string"
                    },
                    {
                        "description": "Dictionary of params to control the nextflow execution. If the param is non-zero that means that steps which specify the param are run and that output files which specify the param will be generated. Example: `{ \"refversion\": \"hg19\", \"bbmap\": 1 }`",
                        "in": "query",
                        "name": "params",
                        "type": "string"
                    },
                    {
                        "description": "Caller-defined external reference identifier from job manifest",
                        "in": "query",
                        "name": "external_id",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Only validation is performed and the job will not be created.",
                        "in": "query",
                        "name": "test",
                        "type": "boolean"
                    },
                    {
                        "description": "Version of the worker AMI if different from the default.",
                        "in": "query",
                        "name": "worker_version",
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "ami",
                        "description": "Source type of the etl-pipelines build to use with this pipeline run.",
                        "enum": [
                            "ami",
                            "git",
                            "artifactory",
                            "url"
                        ],
                        "in": "query",
                        "name": "build_source",
                        "type": "string"
                    },
                    {
                        "description": "Context for build_source, depends on the type.",
                        "in": "query",
                        "name": "build_context",
                        "type": "string"
                    },
                    {
                        "default": true,
                        "description": "Run the job on a spot instance",
                        "in": "query",
                        "name": "spot",
                        "type": "boolean"
                    },
                    {
                        "description": "Custom tags to apply to worker instance",
                        "in": "query",
                        "name": "tags",
                        "type": "string"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "summary": "Create a pipeline job",
                "tags": [
                    "jobs"
                ]
            }
        },
        "/jobs/{job_id}": {
            "delete": {
                "description": "Cancels a job in progress. Can also be used to clean up broken jobs.",
                "operationId": "delete_job",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Cancel a job",
                "tags": [
                    "jobs"
                ]
            },
            "get": {
                "operationId": "get_job",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "summary": "Get job by ID",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "patch": {
                "description": "Perform an action on the job. Currently just supports 'duplicate' which creates\na new QUEUED job identical to this one",
                "operationId": "patch_job",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "Action to perform on the job",
                        "enum": [
                            "duplicate"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobPatch"
                        }
                    }
                },
                "summary": "Duplicate job",
                "tags": [
                    "jobs"
                ]
            }
        },
        "/jobs/{job_id}/events": {
            "get": {
                "description": "Retrieves a list of events for the job.",
                "operationId": "get_job_events",
                "parameters": [
                    {
                        "description": "Event name should start with this string",
                        "in": "query",
                        "name": "event_name",
                        "type": "string"
                    },
                    {
                        "description": "Step name should start with this string",
                        "in": "query",
                        "name": "step_name",
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Also include noisy events (heartbeat)",
                        "in": "query",
                        "name": "all",
                        "type": "boolean"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/JobEvent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get events for job",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "description": "Creates a new event for the job. This is called by an SQS-consuming lambda which in turn\nconsumes events from the EC2 worker instance.\nThe event is processes and interpreted by the API server and the status of the job or steps\nmight be changes based on the event type.",
                "operationId": "post_job_events",
                "parameters": [
                    {
                        "in": "query",
                        "name": "event_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "event_guid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "event",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "date_time",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobEvent"
                        }
                    }
                },
                "summary": "Add a job event",
                "tags": [
                    "jobs"
                ]
            }
        },
        "/jobs/{job_id}/files": {
            "get": {
                "description": "Get information about input and output files for the job.\nIncludes signed url's of the files and file sizes, or -1 if the file is not found.",
                "operationId": "get_job_files",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobFiles"
                        }
                    }
                },
                "summary": "Links to input/output files for job",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobs/{job_id}/instances": {
            "get": {
                "description": "Get a list of instances for the job. Should be zero or one.",
                "operationId": "get_job_instances",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobInstanceSimple"
                        }
                    }
                },
                "summary": "Get job instance",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "description": "Start the worker to run the job. Can only be called once.",
                "operationId": "post_job_instances",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobInstanceSimple"
                        }
                    }
                },
                "summary": "Start a job",
                "tags": [
                    "jobs"
                ]
            }
        },
        "/jobs/{job_id}/instances/{instance_id}": {
            "get": {
                "description": "Get information about the instance",
                "operationId": "get_job_instance",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobInstance"
                        }
                    }
                },
                "summary": "Find job instance by job and EC2 instance ID",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                },
                {
                    "in": "path",
                    "name": "instance_id",
                    "required": true,
                    "type": "string"
                }
            ],
            "patch": {
                "description": "Returns 404 if it has been terminated.",
                "operationId": "patch_job_instance",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "Start or stop",
                        "enum": [
                            "start",
                            "stop"
                        ],
                        "in": "query",
                        "name": "action",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobInstancePatch"
                        }
                    }
                },
                "summary": "Start or stop an instance",
                "tags": [
                    "jobs"
                ]
            }
        },
        "/jobs/{job_id}/instances/{instance_id}/current": {
            "get": {
                "description": "Get information from AWS about the specified instance. If the instance has been deleted\na 404 is returned.",
                "operationId": "get_job_instance_current",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Information about a running instance",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                },
                {
                    "in": "path",
                    "name": "instance_id",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/{job_id}/instances/{instance_id}/metrics": {
            "get": {
                "description": "Gathers the AWS cloudwatch metrics for the instance during the lifetime of the job.",
                "operationId": "get_job_instance_metrics",
                "parameters": [
                    {
                        "default": 5,
                        "description": "Number of minutes between data points",
                        "in": "query",
                        "name": "period",
                        "type": "integer"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobInstanceMetrics"
                        }
                    }
                },
                "summary": "Metrics from instance",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                },
                {
                    "in": "path",
                    "name": "instance_id",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/{job_id}/logs": {
            "get": {
                "description": "Get links to the log groups for the job. The available log groups are each a separate\nresource which fetched logs from Cloudwatch logs.",
                "operationId": "get_job_logs",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobLogs"
                        }
                    }
                },
                "summary": "Links to log groups",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/jobs/{job_id}/logs/{log_group}": {
            "get": {
                "description": "Raw cloudwatch logs as a stream of loglines from the specified log group.",
                "operationId": "get_job_log_group",
                "parameters": [
                    {
                        "description": "String to filter logs by (cloudwatch logs format)",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "Logs for job",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                },
                {
                    "in": "path",
                    "name": "log_group",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/jobs/{job_id}/steps": {
            "get": {
                "description": "List of all steps that have been run and any pending steps",
                "operationId": "get_job_steps",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/JobStep"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "View job steps",
                "tags": [
                    "jobs"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "job_id",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/pipelines/": {
            "get": {
                "description": "Retrieve a list of all pipelines that are currently deployed and can be run.",
                "operationId": "get_pipelines",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PipelineListItem"
                        }
                    }
                },
                "summary": "List of pipelines",
                "tags": [
                    "pipelines"
                ]
            }
        },
        "/pipelines/{pipeline_name}": {
            "get": {
                "description": "Retrieve a pipeline by name. The pipelines are baked into the API server during deployment\nfrom the corresponding etl-pipelines build.",
                "operationId": "get_pipeline",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Pipeline"
                        }
                    }
                },
                "summary": "Pipeline information",
                "tags": [
                    "pipelines"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "pipeline_name",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/users/": {
            "get": {
                "description": "Information about users that are registered in the system. Can be filtered by\ncase-insensitive user name",
                "operationId": "get_users",
                "parameters": [
                    {
                        "description": "Case insensitive user name",
                        "in": "query",
                        "name": "user_name",
                        "type": "string"
                    },
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "List all users",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Information about a specific user",
                "operationId": "get_user",
                "parameters": [
                    {
                        "description": "An optional fields mask",
                        "format": "mask",
                        "in": "header",
                        "name": "X-Fields",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Find user by ID",
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "in": "path",
                    "name": "user_id",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "produces": [
        "application/json"
    ],
    "responses": {
        "MaskError": {
            "description": "When any error occurs on mask"
        },
        "ParseError": {
            "description": "When a mask can't be parsed"
        }
    },
    "security": [
        {
            "jwt": []
        }
    ],
    "securityDefinitions": {
        "jwt": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "name": "root"
        },
        {
            "description": "Pipeline jobs",
            "name": "jobs"
        },
        {
            "description": "Information about pipelines",
            "name": "pipelines"
        },
        {
            "name": "root"
        },
        {
            "description": "Information about registered users",
            "name": "users"
        }
    ]
}